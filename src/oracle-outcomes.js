export const actionOutcomes = [
  {
    id: "0",
    useDie: 6,
    minVal: 1,
  },
  {
    id: "1",
    result: "**No**, it isn't possible to ",
    additional: "And ",
    message: "things are worse than you'd expected. ",
    instruction:
      "**Decide** what complicating factor made your situation worse. ",
    difficultyCheck: null,
    advantage: null,
  },
  {
    id: "2",
    result: "**No**, it isn't possible to ",
    additional: "Sadly, ",
    message: "you'll need to come up with another approach. ",
    instruction: "",
    difficultyCheck: null,
    advantage: null,
  },
  {
    id: "3",
    result: "**No**, it isn't possible to ",
    additional: "But ",
    message: "luckily, it isn't all bad. There's a consolation. ",
    instruction:
      "**Decide** what happened that made failing in this action a positive thing. ",
    difficultyCheck: null,
    advantage: null,
  },
  {
    id: "4",
    result: "**Yes**, it's possible to ",
    additional: "But ",
    message: "unfortunately, there's a cost to your success. ",
    instruction:
      "**Decide** what is is you have to do or pay to achive this action. ",
    difficultyCheck:
      "Roll a difficulty check (DC) with a D20. Passing this check will be ",
    advantage: "dis",
  },
  {
    id: "5",
    result: "**Yes**, it's possible to ",
    additional: "",
    message: "You can do this! ",
    instruction: "",
    difficultyCheck:
      "Roll a difficulty check (DC) with a D20. Passing this check will be ",
    advantage: "std",
  },
  {
    id: "6",
    result: "**Yes**, it's possible to ",
    additional: "And ",
    message: "it goes even better than you'd hoped it would. ",
    instruction: "**Decide** what happend that made your success even better. ",
    difficultyCheck:
      "Roll a difficulty check (DC) with a D20. Passing this check will be ",
    advantage: "adv",
  },
];

export const questionOutcomes = [
  {
    id: "0",
    useDie: 6,
    minVal: 1,
  },
  {
    id: "1",
    result: "**No**, the NPC doesn't ",
    additional: "And ",
    message: "even worse they ... <br/>",
    instruction:
      "**Decide** what complicating factor made your situation worse. ",
    difficultyCheck: null,
    advantage: null,
  },
  {
    id: "2",
    result: "**No**, the NPC doesn't ",
    additional: "Sadly, ",
    message:
      "you'll need to find someone else to ask or come up with another approach. ",
    instruction: "",
    difficultyCheck: null,
    advantage: null,
  },
  {
    id: "3",
    result: "**No**, the NPC doesn't ",
    additional: "But ",
    message: "it isn't all bad. They can ... <br/>",
    instruction: "**Decide** how they can help you. ",
    difficultyCheck: null,
    advantage: null,
  },
  {
    id: "4",
    result: "**Yes**, the NPC does ",
    additional: "But ",
    message: "unfortunately, there's a cost to getting the information. <br/>",
    instruction:
      "**Decide** what is is you have to do or pay to achieve this action. ",
    difficultyCheck:
      "Roll a difficulty check (DC) with a D20. Passing this check will be ",
    advantage: "dis",
  },
  {
    id: "5",
    result: "**Yes**, the NPC does ",
    additional: "",
    message: "Go ahead and ask your question ",
    instruction: "",
    difficultyCheck:
      "Roll a difficulty check (DC) with a D20. Passing this check will be ",
    advantage: "std",
  },
  {
    id: "6",
    result: "**Yes**, the NPC does ",
    additional: "And ",
    message: "even better than you'd hoped they ... <br/>",
    instruction: "**Decide** what makes it better. ",
    difficultyCheck:
      "Roll a difficulty check (DC) with a D20. Passing this check will be ",
    advantage: "adv",
  },
];

export const feedTypeLabels = [
  {
    id: 0,
    useDie: 11,
  },
  {
    id: 1,
    type: "immersion",
    style: "immersionTagStyle",
    label: "Immersion",
    shortTag: "\\i\\",
  },
  {
    id: 2,
    type: "oracle",
    style: "oracleTagStyle",
    label: "Oracle",
    shortTag: "\\o\\",
  },
  {
    id: 3,
    type: "action",
    style: "actionTagStyle",
    label: "Action",
    shortTag: "\\a\\",
  },
  {
    id: 4,
    type: "question",
    style: "questionTagStyle",
    label: "Question",
    shortTag: "\\q\\",
  },
  {
    id: 5,
    type: "tactic",
    style: "tacticTagStyle",
    label: "Combat AI",
    shortTag: "\\c\\",
  },
  {
    id: 6,
    type: "variation",
    style: "variationTagStyle",
    label: "Combat Variation",
    shortTag: "\\v\\",
  },
  {
    id: 7,
    type: "notes",
    style: "notesTagStyle",
    label: "Player",
    shortTag: "\\n\\",
  },
  {
    id: 8,
    type: "description",
    style: "descriptionTagStyle",
    label: "Description",
    shortTag: "\\d\\",
  },
  {
    id: 9,
    type: "location",
    style: "locationTagStyle",
    label: "Location",
    shortTag: "\\l\\",
  },
  {
    id: 10,
    type: "check",
    style: "checkTagStyle",
    label: "Difficulty Check",
    shortTag: "\\dc\\",
  },
  {
    id: 11,
    type: "roll",
    style: "rollTagStyle",
    label: "Dice Roll",
    shortTag: "\\r\\",
  },
];

export const difficultyCheck = [
  {
    id: 0,
    useDie: "15",
    dieMin: 1,
  },
  {
    id: 1,
    minCheck: 7,
    description: "Trivial",
  },
  {
    id: 2,
    minCheck: 10,
    description: "Easy",
  },
  {
    id: 3,
    minCheck: 11,
    description: "Easy",
  },
  {
    id: 4,
    minCheck: 12,
    description: "Moderate",
  },
  {
    id: 5,
    minCheck: 13,
    description: "Moderate",
  },
  {
    id: 6,
    minCheck: 14,
    description: "Hard",
  },
  {
    id: 6,
    minCheck: 15,
    description: "Hard",
  },
  {
    id: 7,
    minCheck: 16,
    description: "Hard",
  },
  {
    id: 9,
    minCheck: 17,
    description: "Very Hard",
  },
  {
    id: 10,
    minCheck: 18,
    description: "Very Hard",
  },
  {
    id: 11,
    minCheck: 19,
    description: "Very Hard",
  },
  {
    id: 12,
    minCheck: 20,
    description: "Very Hard",
  },
  {
    id: 13,
    minCheck: 22,
    description: "Extremely Hard",
  },
  {
    id: 14,
    minCheck: 25,
    description: "Extremely Hard",
  },
  {
    id: 15,
    minCheck: 27,
    description: "Nearly Impossible",
  },
];

export const immersionTables = [
  { id: 0, useDie: 6, minVal: 1 },
  {
    id: 1,
    useDie: 40,
    minVal: 2,
    type: "smell",
    descriptionArr: [
      "You smell ",
      ". Describe how it fits into your scene and how it makes you feel.",
      "acid",
      "candles",
      "smoke",
      "burning",
      "fungus",
      "moss",
      "rotten meat",
      "stone",
      "alcohol",
      "cooking",
      "grass or hay",
      "oil",
      "rust",
      "sulphur",
      "ammonia",
      "damp",
      "decay",
      "incense",
      "old books or paper",
      "smoke",
      "sweat",
      "beeswax",
      "excrement",
      "leather",
      "salt",
      "soil",
      "urine",
      "blood",
      "fish",
      "manure",
      "dust",
      "sour milk",
      "wet fur",
      "breath",
      "flowers",
      "metal",
      "pine",
      "spice",
      "wood",
    ],
  },
  {
    id: 2,
    useDie: 67,
    minVal: 2,
    type: "sound",
    descriptionArr: [
      "You hear ",
      ". Describe how it fits into your scene and how it makes you feel.",
      "banging",
      "chopping",
      "pounding",
      "shattering",
      "barking",
      "vendors",
      "begging",
      "clucking",
      "a wagon",
      "a crash",
      "singing",
      "water flowing",
      "birdsong",
      "horses",
      "sawing",
      "smashing",
      "cawing",
      "wind blowing",
      "children",
      "music",
      "squealing",
      "grinding",
      "murmuring",
      "shrieking",
      "tapping",
      "bell(s)",
      "digging",
      "growling",
      "rattling",
      "sighing",
      "wailing",
      "a boom!",
      "dragging",
      "hammering",
      "rumbling",
      "silence",
      "water-flowing",
      "breathing",
      "dripping",
      "heartbeat",
      "rustling",
      "skittering",
      "whining",
      "bubbling",
      "echo",
      "hissing",
      "scraping",
      "splashing",
      "whispers",
      "chanting",
      "fire",
      "howling",
      "scratching",
      "splintering",
      "whistling",
      "clanking",
      "footsteps",
      "laughter",
      "screaming",
      "squeaking",
      "wind-blowing",
      "giggling",
      "moaning",
      "shouting",
      "talking",
      "yelping",
    ],
  },
  {
    id: 3,
    useDie: 21,
    minVal: 2,
    type: "visual",
    descriptionArr: [
      "You see something ",
      ". Describe how it fits into your scene and how it makes you feel.",
      "beautiful",
      "brightly coloured",
      "broken",
      "crafted",
      "decorated",
      "disgusting",
      "edible",
      "forgotten or discarded",
      "fragile",
      "horrifying",
      "liquid",
      "natural",
      "odd or out-of-place",
      "reflected",
      "round",
      "shadow",
      "shiny or glinting",
      "tiny",
      "valuable",
      "written or carved",
    ],
  },
  {
    id: 4,
    useDie: 2,
    minVal: 3,
    type: "touch",
    descriptionArr: [
      "You feel ",
      " on your skin. Describe how it fits into your scene and how it makes you feel.",
      "a spiderweb",
      "raindrops",
    ],
  },
  {
    id: 5,
    useDie: 2,
    minVal: 3,
    type: "social",
    descriptionArr: [
      "You ",
      ". Describe how it fits into your scene and how it makes you feel.",
      "see someone angry",
      "hear your name called",
    ],
  },
  {
    id: 6,
    useDie: 2,
    minVal: 3,
    type: "sense",
    descriptionArr: [
      "You sense ",
      ". Describe how it fits into your scene and how it makes you feel.",
      "someone is watching",
      "a cold breeze up your spine",
    ],
  },
  {
    id: 7,
    useDie: 5,
    minVal: 0,
    type: "general",
    descriptionArr: [
      "You **smell** something. Expand on what it is in this environment you smell. (eg. You smell meat cooking over an open fire).",
      "You hear a **sound**. Describe what it was and where it's coming from. (eg. You hear a scratching sound but you aren't sure where it's coming from). ",
      "You **see** something that stands out. What is it about the location or NPC that catches your eye? (eg. That barmaid has a large wart on her nose).",
      "You **feel** something. Did you touch something or feel it on your skin? Did something touch you? (eg. You felt the first drops of rain). ",
      "You note a **social** cue or interaction. What expression or emotion did you observe? What was said? Who was it said to? (eg. A loud tavern patron swears at you because you stepped in their way).",
      "You **sense** something. The environment, or people in it, make you remember something or triggers your sixth sense. (eg. You have a sense of being watched). ",
    ],
  },
];

export const combatVariations = [
  {
    id: 0,
    useDie: 33,
  },
  {
    id: 1,
    markdown:
      "The **opponent** with the highest Max HP and who is still concious **regains 10 HP**. The opponent cannot exceed their Max HP. If there are multiple opponents with the same maximum choose one randomly.",
  },
  {
    id: 2,
    markdown:
      "The weather changes suddenly and it begins to rain, sleet or snow heavily (fit to your location). Roll with **Disadvantage for Perception(WIS)** checks on seeing and hearing. **Roll a d6** each round, a 6 reduces visibilty to 10ft for that round. Non-magical flames are extinguished. ",
  },
  {
    id: 3,
    markdown:
      "One random combatant **gains advantage** on his next attack roll and automatically scores a critical hit if successful. Every combatant rolls a **d20**. The combatant with the highest roll combatant gains this benefit. If there's a tie, all tied combatants gain the benefit.",
  },
  {
    id: 4,
    markdown:
      "A heavy wind picks up and continues for the rest of the combat encounter. **Roll a d6** at the top of each round. On a 6, all combatants gain **+2 to AC against ranged attack** for that round. On a 1, one randomly chosen opposition combatant gets dust in their eyes and are **blinded** for a round.",
  },
  {
    id: 5,
    markdown:
      "A minor earthquake forces all combatants on the ground to make a **DC 15 Dexterity save** or fall prone.",
  },
  {
    id: 6,
    markdown:
      "A burst of random residual spell energy, perhaps left by a long dead archmage or deity, causes all magical powers to fluctuate. All spells cast by any combatant this round create a Wild Magic Surge. **Roll on the Wild Magic Surge table** for an effect. You cannot recieve benefits your class can use (eg. sorcery points).",
  },
  {
    id: 7,
    markdown:
      "For this round only, **natural die rolls of 18, 19 or 20 score critical hits** on attack and rolls of 1 do not mean an automatic miss.",
  },
  {
    id: 8,
    markdown:
      "A combatant with **0 HP** (and who hasn't failed 3 saving throws) is not as badly injured as it appeared at first. All elegible combatants **Roll a d20**. The combatant with the highest roll recovers 50% of their normal Max HP but remain prone. If there is a tie, all tied combatants in this recover in this manner.",
  },
  {
    id: 9,
    markdown:
      "**Crash!**. If outside, a 30-foot-tall tree falls in a random direction (affecting 5 by 30 foot area). If inside, the ceiling collapses at a random location (affecting a 15-foot-wide radius). Those in the fall zone take **4d10 bludgeoning damage** (halved with a **DC 15 Dexterity save**). The area is treated as difficult terrain.",
  },
  {
    id: 10,
    markdown:
      "A random opposition combatant (chosen by die roll) fumbles their next attack. They **fail to hit and drop their weapon**. Any PC within 5 feet gets an **attack of opportunity** as a result without expending a reaction.",
  },
  {
    id: 11,
    markdown:
      "All PCs **roll a d20**. The highest roll confers **Hero's Destiny** on that PC for this round. They are granted guaranteed success on one attack. In return they must then describe the exciting movie hero way they make the hit",
  },
  {
    id: 12,
    markdown:
      "The weapon of a random opponent (chosen by die roll) breaks as they attempt to defend themselves. This **drops their AC by 4**.",
  },
  {
    id: 13,
    markdown:
      "A random opponent (chosen by die roll) gets tangled in their own clothing (pants fall down, hand stuck in pocket). They **miss their turn in initiative**.",
  },
  {
    id: 14,
    markdown:
      "All PCs **roll a d20**. The highest roll confers the **Arm of the Gods** on that PC. This **doubles the rolled damage** they do on their next successful hit. Make sure to describe how this looks.",
  },
  {
    id: 15,
    markdown:
      "There is suddenly a horrid smell on the field of combat. All combatants must make a **DC 18 Constitution save** or find themselves doubled over vomiting.",
  },
  {
    id: 16,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 17,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 18,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 19,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 20,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 21,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 22,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 23,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 24,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 25,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 26,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 27,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 28,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 29,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 30,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 31,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 32,
    markdown: "**Nothing happens**. Continue combat.",
  },
  {
    id: 33,
    markdown: "**Nothing happens**. Continue combat.",
  },
];

export const combatTactics = [
  {
    id: 0,
    useDie: 0,
    name: "",
    combatantLabel: "Select Attacker Type",
    options: {
      beforeCombat: "Before Combat",
      lowHp: "Low HP",
      firstRound: "First Round",
      accessMelee: "Within range of Melee (including movement)",
      accessRanged: "Within range of Ranged attack (including movement)",
      sixthRoundPlus: "Sixth round of combat (or beyond)",
      otherOptions: "Out of range and other options",
    },
  },
  {
    id: 1,
    name: "generic",
    combatantLabel: "Generic Combatant",
    combatantGroup: "general",
    groupLabel: "Generic",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee: "**Move** to the nearest PC and make a melee **Attack**.",
    accessRanged:
      "**Move** to an optimal distance and make an **Attack** with a ranged weapon.",
    otherOptions:
      "**Move** or **Dash** to place themselves within range to make an **Attack**.",
  },
  {
    id: 2,
    name: "meleeSpecialist",
    combatantLabel: "Melee Specialist",
    combatantGroup: "general",
    groupLabel: "Generic",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee: "**Move** to the nearest PC and make a melee **Attack**.",
    accessRanged:
      "**Move** or **Dash** to place themselves where they can make melee **Attack**",
    otherOptions:
      "**Move** or **Dash** to place themselves within range to make an **Attack**.",
  },
  {
    id: 3,
    name: "rangedSpecialist",
    combatantLabel: "Ranged Specialist",
    combatantGroup: "general",
    groupLabel: "Generic",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee:
      "make a melee **Attack** if already within melee range. Otherwise **Move** to optimal position for ranged **Attack**.",
    accessRanged:
      "**Move** to an optimal distance and make an **Attack** with a ranged weapon.",
    otherOptions:
      "**Move** or **Dash** to place themselves within range then find cover and ready themselves to make a ranged **Attack**.",
  },
  {
    id: 4,
    name: "dragon",
    combatantLabel: "Dragon",
    combatantGroup: "dragons",
    groupLabel: "Dragons",
    lowHp:
      "**Disengage**, then **Dash** or **Move** away from combat using flight if available.",
    accessMelee: "**Move** to the nearest PC and make a multiattack.",
    accessRanged:
      "**Move** to an optimal distance and make a Breath Weapon **Attack** (if the weapon is ready).",
    otherOptions:
      "**Move**(fly) towards targets and ready Breath Weapon or multiattack.",
  },
  {
    id: 5,
    name: "goblin",
    combatantLabel: "Goblin",
    combatantGroup: "goblinoid",
    groupLabel: "Goblinoid",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee:
      "make a melee **Attack** if already within melee range. Otherwise **Move** to optimal position for ranged **Attack**.",
    accessRanged:
      "**Move** to an optimal distance and make an **Attack** with a ranged weapon then **Hide**",
    otherOptions:
      "**Move** or **Dash** to place themselves within range then find cover and ready themselves to make a ranged **Attack**.",
  },
  {
    id: 6,
    name: "kobold",
    combatantLabel: "Kobold",
    combatantGroup: "goblinoid",
    groupLabel: "Goblinoid",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to activate Swarm if an ally can also reach the target, then Melee **Attack**. Otherwise **Move** to optimal position for ranged **Attack**.",
    accessRanged:
      "**Move** to an optimal distance or **Hide** and make an **Attack** with a ranged weapon.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 7,
    name: "orc",
    combatantLabel: "Orc",
    combatantGroup: "goblinoid",
    groupLabel: "Goblinoid",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee:
      "Use Aggressive trait to **Move** to the nearest PC and make a melee **Attack**.",
    otherOptions: "Use Aggressive trait and **Dash** towards target",
  },
  {
    id: 8,
    name: "gnoll",
    combatantLabel: "Gnoll",
    combatantGroup: "goblinoid",
    groupLabel: "Goblinoid",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** with Rampage.",
    accessRanged: "Only used if PC is fleeing",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 9,
    name: "hobgoblin",
    combatantLabel: "Hobgoblin",
    combatantGroup: "goblinoid",
    groupLabel: "Goblinoid",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to activate Swarm if an ally can also reach the target, then Melee **Attack**. Otherwise **Move** to optimal position for ranged **Attack**.",
    accessRanged:
      "**Move** to an optimal distance or **Hide** and make an **Attack** with a ranged weapon.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 10,
    name: "bugbear",
    combatantLabel: "Bugbear",
    combatantGroup: "goblinoid",
    groupLabel: "Goblinoid",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using surprise if possible.",
    accessRanged: "Only used if PC is fleeing",
    otherOptions: "**Hide** or **Move** to cover and ready **Attack**",
  },
  {
    id: 11,
    name: "mage",
    combatantLabel: "Mage",
    combatantGroup: "humanoidCasters",
    groupLabel: "Humanoid Casters",
    beforeCombat: "use _Mage Armour_.",
    lowHp: "use  _Misty Step_ then **Move** away from combat.",
    firstRound: "use _Greater Invisibility_ then **Move** to optimal range",
    accessMelee:
      "use _Misty Step_ or _Fireball_ then **Move** to optimal range.",
    accessRanged:
      "**Move** to an optimal distance and cast _Cone of Cold_, _Fireball_ or _Ice Storm_.",
    sixthRoundPlus: "use  _Misty Step_ then **Move** away from combat.",
  },
  {
    id: 12,
    name: "archmage",
    combatantLabel: "Archmage",
    combatantGroup: "humanoidCasters",
    groupLabel: "Humanoid Casters",
    beforeCombat: "use _Mage Armour_, _Stone Skin_ or similar.",
    lowHp: "_Teleport_  to **Move** away from combat.",
    firstRound: "use _Greater Time Stop_ then **Move** to optimal range",
    accessMelee:
      "use _Misty Step_ or _Fireball_ then **Move** to optimal range.",
    accessRanged:
      "**Move** to an optimal distance and cast _Cone of Cold_, _Banishment_ or _Lightning Bolt_.",
    sixthRoundPlus: "_Teleport_  to **Move** away from combat.",
    otherOptions: "use _Mirror Image_.",
  },
  {
    id: 13,
    name: "spellcaster",
    combatantLabel: "Spellcaster",
    combatantGroup: "humanoidCasters",
    groupLabel: "Humanoid Casters",
    beforeCombat: "use a _Defense or Buff_ spell with at least 1 min duration",
    lowHp: "use  _An Escape Spell_ then **Move** away from combat.",
    firstRound:
      "use an highest available _Defense or Buff_ spell, then **Move** to optimal range",
    accessMelee:
      "use _Misty Step_ or _Fireball_ then **Move** to optimal range.",
    accessRanged:
      "**Move** to an optimal distance and cast highest available _Damage or Debuff_ spell.",
    sixthRoundPlus: "use  _An Escape Spell_ then **Move** away from combat.",
  },
  {
    id: 14,
    name: "beast",
    combatantLabel: "Beast",
    combatantGroup: "beasts",
    groupLabel: "Beasts",
    beforeCombat: "**Hide** and ready **Attack**.",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** or **Pounce** if available. If **Pack Tactics** available the beast will prefer a target where at least two creatures **Attack** on PC.",
    otherOptions:
      "If predator **Dash** and **Move** towards target, otherwise **Hide** and ready **Attack**.",
  },
  {
    id: 15,
    name: "monstrosity",
    combatantLabel: "Monstrosity",
    combatantGroup: "monstrosities",
    groupLabel: "Monstrosities",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available.",
    accessRanged:
      "**Move** to an optimal distance and make an **Attack** with a ranged weapon, spell or ability.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 16,
    name: "physicalUndead",
    combatantLabel: "Physical Undead",
    combatantGroup: "undead",
    groupLabel: "Undead",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available.",
    accessRanged:
      "**Move** to an optimal distance and make a ranged **Attack**.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 17,
    name: "undeadSpirit",
    combatantLabel: "Undead Spirit",
    combatantGroup: "undead",
    groupLabel: "Undead",
    beforeCombat: "**Hide** or Ready **Attack**",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available.",
    accessRanged:
      "**Move** towards the nearest PC and used ranged **Attack** if available.",
    otherOptions: "**Hide** or Ready **Attack**",
  },
  {
    id: 18,
    name: "vampire",
    combatantLabel: "Vampire",
    combatantGroup: "undead",
    groupLabel: "Undead",
    beforeCombat: "use a preparatory spell or ability",
    lowHp: "flee using relevant spells and abilities.",
    accessMelee:
      "**Move** to the most vulnerable PC and use a spell or ability.",
    accessRanged:
      "**Move** to an optimal distance and **Attack** with a spell or ability.",
    otherOptions: "use a preparatory spell or ability",
  },
  {
    id: 19,
    name: "lich",
    combatantLabel: "Lich",
    combatantGroup: "undead",
    groupLabel: "Undead",
    beforeCombat: "use a preparatory spell or ability",
    lowHp: "flee using relevant spells and abilities.",
    accessMelee:
      "**Move** to the most vulnerable PC and use a spell or ability.",
    accessRanged:
      "**Move** to an optimal distance and **Attack** with a spell or ability.",
    otherOptions: "use a preparatory spell or ability",
  },
  {
    id: 20,
    name: "highLevelUndead",
    combatantLabel: "High Level Undead",
    combatantGroup: "undead",
    groupLabel: "Undead",
    beforeCombat: "use a preparatory spell or ability",
    lowHp: "flee using relevant spells and abilities.",
    accessMelee:
      "**Move** to the most vulnerable PC and use a spell or ability.",
    accessRanged:
      "**Move** to an optimal distance and **Attack** with a spell or ability.",
    otherOptions: "use a preparatory spell or ability",
  },
  {
    id: 21,
    name: "construct",
    combatantLabel: "Construct",
    combatantGroup: "constructs",
    groupLabel: "Construct",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available.",
    accessRanged:
      "**Move** towards the nearest PC and used ranged **Attack** if available.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 22,
    name: "elemental",
    combatantLabel: "Elemental",
    combatantGroup: "elementals",
    groupLabel: "Elemental",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available.",
    accessRanged:
      "**Move** towards the nearest PC and used ranged **Attack** if available.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 23,
    name: "genie",
    combatantLabel: "Genie",
    combatantGroup: "genii",
    groupLabel: "Genii",
    lowHp:
      "**Disengage**, then **Move** away from combat using flight if available.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available.",
    accessRanged:
      "**Move** towards the nearest PC and used ranged **Attack** if available.",
    otherOptions: "**Move** or **Dash** towards targets (fly).",
  },
  {
    id: 24,
    name: "ogre",
    combatantLabel: "Ogre",
    combatantGroup: "giants",
    groupLabel: "Giants",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available.",
    accessRanged:
      "**Move** towards the nearest PC and use Javelin for ranged **Attack**.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 25,
    name: "troll",
    combatantLabel: "Troll",
    combatantGroup: "giants",
    groupLabel: "Giants",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 26,
    name: "hillGiant",
    combatantLabel: "Hill Giant",
    combatantGroup: "giants",
    groupLabel: "Giants",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available.",
    accessRanged: "**Move** towards the nearest PC and throw a rock.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 27,
    name: "stoneGiant",
    combatantLabel: "Stone Giant",
    combatantGroup: "giants",
    groupLabel: "Giants",
    beforeCombat: "**Hide** or Ready ranged **Attack**",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available.",
    accessRanged: "Throw a rock.",
    otherOptions: "**Hide** or Ready ranged **Attack**",
  },
  {
    id: 28,
    name: "frostGiant",
    combatantLabel: "Frost Giant",
    combatantGroup: "giants",
    groupLabel: "Giants",
    accessMelee:
      "**Move** to the strongest PC and make a melee **Attack** using multiattack if available.",
    accessRanged: "**Move** towards the nearest PC and throw a rock.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 29,
    name: "fireGiant",
    combatantLabel: "Fire Giant",
    combatantGroup: "giants",
    groupLabel: "Giants",
    lowHp: "**Disengage**, then **Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the weakest PC and make a melee **Attack** using multiattack if available.",
    accessRanged: "**Move** towards the nearest PC and throw a rock.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 30,
    name: "cloudGiant",
    combatantLabel: "Cloud Giant",
    combatantGroup: "giants",
    groupLabel: "Giants",
    beforeCombat: "negotiate or wait",
    lowHp: "use  _Misty Step_ then **Dash** or **Move** away from combat.",
    accessMelee:
      "use _Misty Step_ to get behind or **Move** to the weakest PC and make a melee **Attack** using multiattack if available.",
    accessRanged: "Negotiate by preference or throw a rock.",
    otherOptions: "wait",
  },
  {
    id: 31,
    name: "stormGiant",
    combatantLabel: "Storm Giant",
    combatantGroup: "giants",
    groupLabel: "Giants",
    beforeCombat: "negotiate",
    lowHp: "surrender or attempt to negotiate",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available.",
    accessRanged: "Negotiate by preference or throw a rock.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 32,
    name: "hag",
    combatantLabel: "Hag",
    combatantGroup: "fey",
    groupLabel: "Fey",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "use special abilities against PCs they can target within an **Move**ment then use abilities to **Move** to optimal range",
    accessRanged:
      "**Move** to an optimal distance or **Hide** and make an **Attack** with a ranged weapon.",
    otherOptions: "Regroup or **Hide** and ready ranged **Attack**",
  },
  {
    id: 33,
    name: "evilFey",
    combatantLabel: "Evil Fey",
    combatantGroup: "fey",
    groupLabel: "Fey",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee: "**Move** to the nearest PC and make a melee **Attack**.",
    accessRanged:
      "**Move** towards the nearest PC and make a ranged **Attack**.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 34,
    name: "neutralOrGoodFey",
    combatantLabel: "Neutral / Good Fey",
    combatantGroup: "fey",
    groupLabel: "Fey",
    beforeCombat: "**Hide** or **Move** to cover and ready **Attack**",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee: "**Move** to optimal position for ranged **Attack**.",
    accessRanged:
      "**Move** to an optimal distance or **Hide** and make an **Attack** with a ranged weapon.",
    otherOptions: "**Hide** or **Move** to cover and ready **Attack**",
  },
  {
    id: 35,
    name: "beholder",
    combatantLabel: "Beholder",
    combatantGroup: "aberrations",
    groupLabel: "Aberrations",
    beforeCombat: "**Hide** or **Move** to cover and ready ranged **Attack**",
    lowHp:
      "**Disengage**, then **Dash** or **Move** away from combat using flight.",
    accessMelee: "**Move** to optimal position for ranged **Attack**.",
    accessRanged:
      "**Move** to an optimal distance and make a ranged **Attack**.",
    otherOptions: "**Hide** or **Move** to cover and ready ranged **Attack**",
  },
  {
    id: 36,
    name: "illithid",
    combatantLabel: "Illithid / Mind Flayer",
    combatantGroup: "aberrations",
    groupLabel: "Aberrations",
    lowHp: "use  _Plane Shift_ ,**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make an **Attack** using Mind Blast, Tentacle or Extract Brain.",
    accessRanged:
      "**Move** to an optimal distance and make an **Attack** with Mind Blast.",
    otherOptions: "**Move**, send Minions or ready ranged **Attack**.",
  },
  {
    id: 37,
    name: "slaad",
    combatantLabel: "Slaad",
    combatantGroup: "aberrations",
    groupLabel: "Aberrations",
    lowHp: "**Dash** or **Move** away from combat.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available.",
    accessRanged:
      "**Move** towards the nearest PC and make a ranged **Attack**.",
    otherOptions:
      "**Hide** or **Move** to cover and ready **Attack**, Shapechange",
  },
  {
    id: 38,
    name: "celestial",
    combatantLabel: "Celestial",
    combatantGroup: "celestials",
    groupLabel: "Celestial",
    lowHp:
      "**Disengage**, using relevant spells and abilities if available then **Move** away from combat using flight if available.",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available. Always use defensive spells first, **Attack** the most evil / chaotic target first if possible.",
    accessRanged:
      "**Move** (fly) to an optimal distance and make a ranged **Attack**.",
    otherOptions:
      "**Move** (fly) towards targets and use support abilities on self or allies",
  },
  {
    id: 39,
    name: "demon",
    combatantLabel: "Demon",
    combatantGroup: "fiends",
    groupLabel: "Fiends",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available. ",
    accessRanged:
      "**Move** towards the nearest PC and make a ranged **Attack**.",
    otherOptions:
      "Use ability, ready **Attack** or **Move** towards nearest PC.",
  },
  {
    id: 40,
    name: "devilOrFiend",
    combatantLabel: "Devil / Fiend",
    combatantGroup: "fiends",
    groupLabel: "Fiends",
    lowHp:
      "**Disengage**, then **Move** away from combat using flight if available.",
    accessMelee: "**Move** to the nearest PC and make a melee **Attack**.",
    accessRanged:
      "**Move** to an optimal distance and make a ranged **Attack**.",
    otherOptions: "**Move** or **Dash** towards targets.",
  },
  {
    id: 41,
    name: "rakshasa",
    combatantLabel: "Rakshasa",
    combatantGroup: "fiends",
    groupLabel: "Fiends",
    lowHp: "use  _Plane Shift_ , _Invisibility_ or **Move** away from combat.",
    accessMelee:
      "If within melee range already, use multiattack, otherwise ignore this trigger.",
    accessRanged:
      "**Move** to an optimal distance and use _Dominate_, _Charm_ or _Suggestion_.",
    otherOptions: "Invisibility or Major Image and **Move** towards targets.",
  },
  {
    id: 42,
    name: "ooze",
    combatantLabel: "Ooze",
    combatantGroup: "oozes",
    groupLabel: "Oozes",
    lowHp:
      "**Dash** or **Move** away from combat using _Amorphous_ if available.",
    accessMelee: "**Move** to the nearest PC then Engulf or hit with Pseudopod",
    otherOptions: "**Hide** and ready **Attack**",
  },
  {
    id: 43,
    name: "plant",
    combatantLabel: "Plant",
    combatantGroup: "plants",
    groupLabel: "Plants",
    accessMelee:
      "**Move** to the nearest PC and make a melee **Attack** using multiattack if available. Alway use knockdown effect like **Charge** if available. ",
    accessRanged:
      "**Move** to an optimal distance and make a ranged **Attack** if available.",
    otherOptions: "**Hide** and ready **Attack**",
  },
  {
    id: 44,
    name: "mimic",
    combatantLabel: "Mimic",
    combatantGroup: "monstrosities",
    groupLabel: "Monstrosities",
    accessMelee: "**Move** to the nearest PC then Engulf or hit with Pseudopod",
    otherOptions: "**Hide** and ready **Attack**",
  },
];

export const skillsAndAbilities = [
  {
    id: 0,
    useDie: 20,
  },
  {
    id: 1,
    name: "strength",
    label: "Strength (STR)",
    abilityType: "STR",
    category: "ability",
  },
  {
    id: 2,
    name: "dexterity",
    label: "Dexterity (DEX)",
    abilityType: "DEX",
    category: "ability",
  },
  {
    id: 3,
    name: "constitution",
    label: "Constitution (CON)",
    abilityType: "CON",
    category: "ability",
  },
  {
    id: 4,
    name: "intelligence",
    label: "Intelligence (INT)",
    abilityType: "INT",
    category: "ability",
  },
  {
    id: 5,
    name: "wisdom",
    label: "Wisdom (WIS)",
    abilityType: "WIS",
    category: "ability",
  },
  {
    id: 6,
    name: "charisma",
    label: "Charisma (CHA)",
    abilityType: "CHA",
    category: "ability",
  },
  {
    id: 7,
    name: "acrobatics",
    label: "Acrobatics (DEX)",
    abilityType: "DEX",
    category: "skill",
  },
  {
    id: 8,
    name: "animalHandling",
    label: "Animal Handling (WIS)",
    abilityType: "WIS",
    category: "skill",
  },
  {
    id: 9,
    name: "arcana",
    label: "Arcana (INT)",
    abilityType: "INT",
    category: "skill",
  },
  {
    id: 10,
    name: "athletics",
    label: "Athletics (STR)",
    abilityType: "STR",
    category: "skill",
  },
  {
    id: 11,
    name: "deception",
    label: "Deception (CHA)",
    abilityType: "CHA",
    category: "skill",
  },
  {
    id: 12,
    name: "history",
    label: "History (INT)",
    abilityType: "INT",
    category: "skill",
  },
  {
    id: 13,
    name: "insight",
    label: "Insight (WIS)",
    abilityType: "WIS",
    category: "skill",
  },
  {
    id: 14,
    name: "intimidation",
    label: "Intimidation (CHA)",
    abilityType: "CHA",
    category: "skill",
  },
  {
    id: 15,
    name: "investigation",
    label: "Investigation (INT)",
    abilityType: "INT",
    category: "skill",
  },
  {
    id: 16,
    name: "medicine",
    label: "Medicine (WIS)",
    abilityType: "WIS",
    category: "skill",
  },
  {
    id: 17,
    name: "nature",
    label: "Nature (INT)",
    abilityType: "INT",
    category: "skill",
  },
  {
    id: 18,
    name: "perception",
    label: "Perception (WIS)",
    abilityType: "WIS",
    category: "skill",
  },
  {
    id: 19,
    name: "performance",
    label: "Performance (CHA)",
    abilityType: "CHA",
    category: "skill",
  },
  {
    id: 20,
    name: "persuasion",
    label: "Persuasion (CHA)",
    abilityType: "CHA",
    category: "skill",
  },
  {
    id: 21,
    name: "religion",
    label: "Religion (INT)",
    abilityType: "INT",
    category: "skill",
  },
  {
    id: 22,
    name: "sleightOfHand",
    label: "Sleight of Hand (DEX)",
    abilityType: "DEX",
    category: "skill",
  },
  {
    id: 23,
    name: "stealth",
    label: "Stealth (DEX)",
    abilityType: "DEX",
    category: "skill",
  },
  {
    id: 24,
    name: "survival",
    label: "Survival (WIS)",
    abilityType: "WIS",
    category: "skill",
  },
  {
    id: 25,
    name: "thievesTools",
    label: "Thieves’ Tools (DEX)",
    abilityType: "DEX",
    category: "tools",
  },
  {
    id: 26,
    name: "brewerTools",
    label: "Brewer’s Tools",
    abilityType: "INT/WIS",
    category: "tools",
  },
  {
    id: 27,
    name: "calligrapherTools",
    label: "Calligrapher’s Tools",
    abilityType: "DEX/INT",
    category: "tools",
  },
  {
    id: 28,
    name: "carpenterTools",
    label: "Carpenter’s Tools",
    abilityType: "DEX/STR",
    category: "tools",
  },
  {
    id: 29,
    name: "cartographerTools",
    label: "Cartographer’s Tools",
    abilityType: "INT",
    category: "tools",
  },
  {
    id: 30,
    name: "cobblerTools",
    label: "Cobbler’s Tools",
    abilityType: "DEX/INT",
    category: "tools",
  },
  {
    id: 31,
    name: "cookTools",
    label: "Cook’s Utensils",
    abilityType: "INT/WIS",
    category: "tools",
  },
  {
    id: 32,
    name: "disguiseKit",
    label: "Disguise Kit",
    abilityType: "DEX/CHA",
    category: "tools",
  },
  {
    id: 33,
    name: "forgeryKit",
    label: "Forgery Kit",
    abilityType: "INT",
    category: "tools",
  },
  {
    id: 34,
    name: "glassblowerTools",
    label: "Glassblower’s Tools",
    abilityType: "INT",
    category: "tools",
  },
  {
    id: 35,
    name: "herbalismKit",
    label: "Herbalism Kit",
    abilityType: "INT/WIS",
    category: "tools",
  },
  {
    id: 36,
    name: "jewelerTools",
    label: "Jeweler’s Tools",
    abilityType: "DEX",
    category: "tools",
  },
  {
    id: 37,
    name: "leatherworkerTools",
    label: "Leatherworker’s Tools",
    abilityType: "DEX",
    category: "tools",
  },
  {
    id: 38,
    name: "masonTools",
    label: "Mason’s Tool",
    abilityType: "INT/DEX",
    category: "tools",
  },
  {
    id: 39,
    name: "navigatorTools",
    label: "Navigator’s Tools",
    abilityType: "INT/WIS",
    category: "tools",
  },
  {
    id: 40,
    name: "painterTools",
    label: "Painter’s Tools",
    abilityType: "INT/WIS",
    category: "tools",
  },
  {
    id: 41,
    name: "poisonerKit",
    label: "Poisoner’s Kit",
    abilityType: "DEX/INT",
    category: "tools",
  },
  {
    id: 42,
    name: "potterTools",
    label: "Potter’s Tools",
    abilityType: "DEX",
    category: "tools",
  },
  {
    id: 43,
    name: "smithTools",
    label: "Smith’s Tools",
    abilityType: "STR/DEX",
    category: "tools",
  },
  {
    id: 44,
    name: "tinkerTools",
    label: "Tinker’s Tools",
    abilityType: "INT/DEX",
    category: "tools",
  },
  {
    id: 45,
    name: "weaverTools",
    label: "Weaver’s Tools",
    abilityType: "WIS/DEX",
    category: "tools",
  },
  {
    id: 46,
    name: "woodcarverTools",
    label: "Woodcarver’s Tools",
    abilityType: "DEX/INT",
    category: "tools",
  },
  {
    id: 47,
    name: "alchemistTools",
    label: "Alchemist’s Tools",
    abilityType: "INT",
    category: "tools",
  },
];
